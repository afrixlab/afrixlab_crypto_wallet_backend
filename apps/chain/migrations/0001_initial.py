# Generated by Django 4.2.5 on 2023-10-01 21:43

import apps.utils.enums.base
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Chain',
            fields=[
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_last_modified', models.DateTimeField(auto_now=True)),
                ('id', models.IntegerField(primary_key=True, serialize=False, verbose_name='Blockchain Chain ID')),
                ('testnet_id', models.IntegerField(blank=True, default=0, null=True, unique=True, verbose_name='Blockchain Testnet Chain ID')),
                ('chain_name', models.CharField(max_length=35, verbose_name='Blockchain Name')),
                ('chain_symbol', models.CharField(max_length=15, verbose_name='Blockchain Symbol')),
                ('chain_type', models.CharField(choices=[('(PoW)', 'PROOF_OF_WORK'), ('(PoS)', 'PROOF_OF_STAKE'), ('(DPoS)', 'DELEGATED_PROOF_OF_STAKE'), ('(PoA)', 'PROOF_OF_AUTHORITY'), ('(PoST)', 'PROOF_OF_SPACE_AND_TIME'), ('(PoH)', 'PROOF_OF_HISTORY'), ('(PoET)', 'PROOF_OF_ELASPSED_TIME'), ('(PBFT)', 'PRATICAL_BYZANTINE_FAULT_TOLERANCE'), ('(DAG)', 'DIRECTED_ACYCLIC_GRAPH')], default='(PoS)', max_length=15, verbose_name='Blockchain Consenesus Type')),
                ('chain_logo', models.FileField(upload_to='vaults/chain/', verbose_name='Blockchain Logo')),
                ('chain_explorer', models.URLField(blank=True, max_length=125, null=True, verbose_name='Blockchain Explorer URL')),
                ('testnet_explorer', models.URLField(blank=True, max_length=125, null=True, verbose_name='Blockchain Testnet Explorer URL')),
            ],
            options={
                'verbose_name': 'Supported Blockchain',
                'verbose_name_plural': 'Supported Blockchains',
            },
            bases=(apps.utils.enums.base.BaseModelBaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Coin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_last_modified', models.DateTimeField(auto_now=True)),
                ('coin_name', models.CharField(max_length=50, unique=True, verbose_name='Coin Name')),
                ('coin_symbol', models.CharField(max_length=50, unique=True, verbose_name='Coin Symbol')),
                ('coin_logo', models.FileField(upload_to='vaults/coin/', verbose_name='Coin Logo')),
                ('contract_address', models.CharField(blank=True, max_length=64, null=True, verbose_name='Contract address of coin')),
                ('coin_chain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chain.chain', verbose_name='Blockchain coin was deployed or created')),
            ],
            options={
                'verbose_name': 'Blockchain Coin',
                'verbose_name_plural': 'Blockchain Coins',
            },
            bases=(apps.utils.enums.base.BaseModelBaseMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ChainNodes',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date_added', models.DateTimeField(auto_now_add=True)),
                ('date_last_modified', models.DateTimeField(auto_now=True)),
                ('node', models.URLField(max_length=255)),
                ('node_chain_type', models.CharField(choices=[('MAINNET', 'MAINNET'), ('TESTNET', 'TESTNET')], default='TESTNET', max_length=10, verbose_name='Blockchain Node Type')),
                ('chain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='chain.chain', verbose_name='Blockchain that owns this node')),
            ],
            options={
                'verbose_name': 'Blockchain node',
                'verbose_name_plural': 'Blockchain nodes',
            },
            bases=(apps.utils.enums.base.BaseModelBaseMixin, models.Model),
        ),
    ]
